# devopsdemo - pipeline

name: $(date:yyyyMMdd)$(rev:.rr)  #ex: 20190910.00 revision=.rr

stages:            #build/release defintion, code analysis
  - stage: 'build'  # (without '') i want this to eventually be evaluated
    condition:  succeded()      #when to run stage -- last ?build? must have succeded
    displayName: 'build-mvc'  # literal value
    jobs:
      - job:
        condition: succeeded()
        displayName: 'build-process'
        pool:
          vmImage: 'ubuntu-16.04' #vm to run installer
        steps:
          - task: UseDotNet@2
            displayName: 'dotnet installer'
            inputs:
              version: '2.2.401'
          - script: | #keep config as is vs > forget format - wordWrap everything vs |> 
              echo 'Hello Pipeline'
              dotnet build
            # - task: DotnetInstaller@1
            #   input: '2.2.401'  #Version
            # - task:
              
  - stage:  'test'
    condition: succeded() #'build')
    displayName: 'test-mvc'
    jobs:    
      - job: 
        condition: succeded() #and(succeded(), eq(['BranchName'], 'fred'))    #only complete a job if given condtion met
        displayName: 'test-process'
        pool:   #toolbox -- pool of tools
          vmImage: 'ubuntu-16.04' #what type of server do we want?
        steps:    #2 kinds - tasks & scripts
          - task: UseDotNet@2
            displayName: 'dotnet installer'
            inputs:
              version: '2.2.401'
          - script: |
              dotnet tool install --global dotnet-sonarscanner
              dotnet sonarscanner begin /k:"DoryinB_devopsworld" /o:"doryinb" /d:sonar.login="0b55bd562bf3b09a429cffccd6e8603b3a958084" /d:sonar.host.url="https://sonarcloud.io/"
              dotnet build
              dotnet test -p:CollectCoverage=true
              dotnet sonarscanner end /d:sonar.login="0b55bd562bf3b09a429cffccd6e8603b3a958084"
              echo 'test passed ...'
          - task: PublishTestResults@2
            displayName: 'publish result::unit-test'
            inputs:
              testRunner: VSTest
              testResultsFiles: '**/*.trx'
          - task: PublishCodeCoverageResults@1
            displayName: 'publish result::code-coverage'
            inputs:
              codeCoverageTool: cobertura
              summaryFileLocation: '**/coverage.cobertura.xml'

  - stage:  'pack'
    condition: succeded()
    dependsOn:     #only run this stage if other stages have run -- test not neccissary run after build
      - test
      #- 
    displayName: 'pack-mvc'
    jobs:    #
      - job: 
        condition: succeded() #and(succeded(), eq(['BranchName'], 'fred'))    #only complete a job if given condtion met
        displayName: 'pack-process'
        pool:   #toolbox -- pool of tools
          vmImage: 'ubuntu-16.04' #what type of server do we want?
        steps:    #2 kinds - tasks & scripts
          - script: |
              echo 'test passed ...'
              dotnet publish
  - stage:  'deployed'
    condition: succeded()
    dependsOn:     #only run this stage if other stages have run -- test not neccissary run after build
      - test
      # - 
    displayName: 'deploy-mvc'
    jobs:    #
      -job: 
      condition: succeded() #and(succeded(), eq(['BranchName'], 'fred'))    #only complete a job if given condtion met
      displayName: 'deployed-process'
      pool:   #toolbox -- pool of tools
        vmImage: 'ubuntu-16.04' #what type of server do we want?
      steps:    #2 kinds - tasks & scripts
        - script: |
            echo 'working on it ...'

trigger:
  # - master  #include only master
  branches:     # filter on the branches we want/do not want
    include:
      - master
      # exclude:
      #   -'*'

  # - pr:           # pull request
  #     include:
  #     exclude:  
  # - tags:         # denotes the type
  #     include:
  #     exclude:


variables:    #2 types group(denoted by group) single 
  variables:
  #sonar: ''
